name: Acryl Business Glossary Sync
description: Update your business glossary yaml files with changes from DataHub.
inputs:
  datahub_gms_host:
    description: "DataHub GMS host."
    required: true
  datahub_gms_token:
    description: "DataHub GMS token."
    required: false

  business_glossary_file:
    description: "Path to the business glossary yaml file."
    required: true
  enable_auto_id:
    description: "Set to true if you use `enable_auto_id` in your business glossary ingestion."
    default: "false"
  prune:
    description: "Set to true if you want to use only glossraies from file and not the use from server"
    default: "false"
  
  yaml_explicit_start:
    description: "Set to true to include explicit YAML document start marker (---)"
    default: "false"
  yaml_line_length:
    description: "Maximum line length for YAML formatting"
    default: "200"
  yaml_sequence_style:
    description: "YAML sequence style (block, flow, or keep_style)"
    default: "keep_style"

  debug_mode:
    description: "Set to true to enable debug mode."
    default: "false"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Sync business glossary
      shell: bash
      run: |
        set -x
        pip install -r ${{ github.action_path }}/requirements.txt

        python ${{ github.action_path }}/glossary-sync.py \
          update-glossary-file \
          --enable-auto-id ${{ inputs.enable_auto_id }} \
          --file ${{ inputs.business_glossary_file }} \
          --prune ${{ inputs.prune }}

        git status
      env:
        DATAHUB_GMS_HOST: ${{ inputs.datahub_gms_host }}
        DATAHUB_GMS_TOKEN: ${{ inputs.datahub_gms_token }}
        DEBUG_MODE: ${{ inputs.debug_mode }}

    - name: Format YAML file
      shell: bash
      run: |
        pip install yamlfix yamllint pre-commit
        
        YAMLFIX_EXPLICIT_START=${{ inputs.yaml_explicit_start }} \
        YAMLFIX_LINE_LENGTH=${{ inputs.yaml_line_length }} \
        YAMLFIX_SEQUENCE_STYLE=${{ inputs.yaml_sequence_style }} \
        yamlfix ${{ inputs.business_glossary_file }}
        
        yamllint ${{ inputs.business_glossary_file }} || echo "YAML linting found issues but continuing"
        
        git status

branding:
  icon: "activity"
  color: "green"
